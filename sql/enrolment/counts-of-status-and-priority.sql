-- Progress: March 12 2013, 4:40pm
-- To do: Research how to do sub-totals, grand total, gender split, total by gender

WITH STATUS_PRIORITY_CAPTURE AS
(
	SELECT
		GENDER.GENDER,
		STUDENT_STATUS_ID,
	    CASE STUDENT_STATUS_ID
	      WHEN 1 THEN 'Application Cancelled'
	      WHEN 2 THEN 'Alumni'
	      WHEN 3 THEN 'Past Enrolment'
	      WHEN 4 THEN 'Returning Enrolment'
	      WHEN 5 THEN 'Current Enrolment'
	      WHEN 6 THEN 'Place Accepted'
	      WHEN 7 THEN 'Offered Place'
	      WHEN 8 THEN 'Interview Pending'
	      WHEN 9 THEN 'Wait Listed'
	      WHEN 10 THEN 'Application Received'
	      WHEN 11 THEN 'Information Sent'
	      WHEN 12 THEN 'Enquiry'
	      WHEN 13 THEN 'Interview Complete'
	      WHEN 14 THEN 'Expired Offer'
	      WHEN 15 THEN 'Expired Application'
    	END AS "STATUS",
		PRIORITY_ID
	
	FROM TABLE(EDUMATE.GETALLSTUDENTSTATUS(current_date)) ALLKIDS
	
	INNER JOIN CONTACT ON CONTACT.CONTACT_ID = ALLKIDS.CONTACT_ID
	INNER JOIN GENDER ON GENDER.GENDER_ID = CONTACT.GENDER_ID
	
	WHERE EXP_FORM_RUN > TO_CHAR(YEAR(current_date) + 1) || ' Year %'
	ORDER BY STUDENT_STATUS_ID
)

SELECT
	STATUS,
	COUNT(CASE WHEN PRIORITY_ID = 1 THEN 1 ELSE null END) AS "Catholic Student and School",
	COUNT(CASE WHEN PRIORITY_ID = 2 THEN 1 ELSE null END) AS "Current Families",
	COUNT(CASE WHEN PRIORITY_ID = 3 THEN 1 ELSE null END) AS "Catholic Student - Other",
	COUNT(CASE WHEN PRIORITY_ID = 4 THEN 1 ELSE null END) AS "Other",
	COUNT(CASE WHEN PRIORITY_ID = 5 THEN 1 ELSE null END) AS "Ex-Student",
	COUNT(CASE WHEN PRIORITY_ID = 6 THEN 1 ELSE null END) AS "Partial Acceptance",
	COUNT(CASE WHEN PRIORITY_ID = 7 THEN 1 ELSE null END) AS "Did not apply",
	COUNT(CASE WHEN PRIORITY_ID = 25 THEN 1 ELSE null END) AS "Italian Bilingual School",
	COUNT(CASE WHEN PRIORITY_ID = 49 THEN 1 ELSE null END) AS "CF - C - CS",
	COUNT(CASE WHEN PRIORITY_ID = 73 THEN 1 ELSE null END) AS "CF - GO - CS",
	COUNT(CASE WHEN PRIORITY_ID = 74 THEN 1 ELSE null END) AS "CF - OC - CS",
	COUNT(CASE WHEN PRIORITY_ID = 75 THEN 1 ELSE null END) AS "CF - NC - CS",
	COUNT(CASE WHEN PRIORITY_ID = 76 THEN 1 ELSE null END) AS "CF - C - SS",
	COUNT(CASE WHEN PRIORITY_ID = 78 THEN 1 ELSE null END) AS "CF - GO - SS",
	COUNT(CASE WHEN PRIORITY_ID = 79 THEN 1 ELSE null END) AS "CF - OC - SS",
	COUNT(CASE WHEN PRIORITY_ID = 80 THEN 1 ELSE null END) AS "CF - NC - SS",
	COUNT(CASE WHEN PRIORITY_ID = 81 THEN 1 ELSE null END) AS "CF - C - OS",
	COUNT(CASE WHEN PRIORITY_ID = 82 THEN 1 ELSE null END) AS "CF - GO - OS",
	COUNT(CASE WHEN PRIORITY_ID = 83 THEN 1 ELSE null END) AS "CF - OC - OS",
	COUNT(CASE WHEN PRIORITY_ID = 84 THEN 1 ELSE null END) AS "CF - NC - OS",
	COUNT(CASE WHEN PRIORITY_ID = 85 THEN 1 ELSE null END) AS "IBS - C",
	COUNT(CASE WHEN PRIORITY_ID = 86 THEN 1 ELSE null END) AS "IBS - GO",
	COUNT(CASE WHEN PRIORITY_ID = 87 THEN 1 ELSE null END) AS "IBS - OC",
	COUNT(CASE WHEN PRIORITY_ID = 88 THEN 1 ELSE null END) AS "IBS - NC",
	COUNT(CASE WHEN PRIORITY_ID = 89 THEN 1 ELSE null END) AS "A - C - CS",
	COUNT(CASE WHEN PRIORITY_ID = 90 THEN 1 ELSE null END) AS "A - GO - CS",
	COUNT(CASE WHEN PRIORITY_ID = 91 THEN 1 ELSE null END) AS "A - OC - CS",
	COUNT(CASE WHEN PRIORITY_ID = 92 THEN 1 ELSE null END) AS "A - NC - CS",
	COUNT(CASE WHEN PRIORITY_ID = 93 THEN 1 ELSE null END) AS "A - C - SS",
	COUNT(CASE WHEN PRIORITY_ID = 94 THEN 1 ELSE null END) AS "A - GO - SS",
	COUNT(CASE WHEN PRIORITY_ID = 95 THEN 1 ELSE null END) AS "A - OC - SS",
	COUNT(CASE WHEN PRIORITY_ID = 96 THEN 1 ELSE null END) AS "A - NC - SS",
	COUNT(CASE WHEN PRIORITY_ID = 97 THEN 1 ELSE null END) AS "A - C - OS",
	COUNT(CASE WHEN PRIORITY_ID = 98 THEN 1 ELSE null END) AS "A - GO - OS",
	COUNT(CASE WHEN PRIORITY_ID = 99 THEN 1 ELSE null END) AS "A - OC - OS",
	COUNT(CASE WHEN PRIORITY_ID = 100 THEN 1 ELSE null END) AS "A - NC - OS",
	COUNT(CASE WHEN PRIORITY_ID = 101 THEN 1 ELSE null END) AS "OTH - C - CS",
	COUNT(CASE WHEN PRIORITY_ID = 102 THEN 1 ELSE null END) AS "OTH - GO - CS",
	COUNT(CASE WHEN PRIORITY_ID = 103 THEN 1 ELSE null END) AS "OTH - OC - CS",
	COUNT(CASE WHEN PRIORITY_ID = 104 THEN 1 ELSE null END) AS "OTH - NC - CS",
	COUNT(CASE WHEN PRIORITY_ID = 105 THEN 1 ELSE null END) AS "OTH - C - SS",
	COUNT(CASE WHEN PRIORITY_ID = 106 THEN 1 ELSE null END) AS "OTH - GO - SS",
	COUNT(CASE WHEN PRIORITY_ID = 107 THEN 1 ELSE null END) AS "OTH - OC - SS",
	COUNT(CASE WHEN PRIORITY_ID = 108 THEN 1 ELSE null END) AS "OTH - NC - SS",
	COUNT(CASE WHEN PRIORITY_ID = 121 THEN 1 ELSE null END) AS "OTH - C - OS",
	COUNT(CASE WHEN PRIORITY_ID = 122 THEN 1 ELSE null END) AS "OTH - GO - OS",
	COUNT(CASE WHEN PRIORITY_ID = 123 THEN 1 ELSE null END) AS "OTH - OC - OS",
	COUNT(CASE WHEN PRIORITY_ID = 124 THEN 1 ELSE null END) AS "OTH - NC - OS"

FROM STATUS_PRIORITY_CAPTURE

GROUP BY STATUS