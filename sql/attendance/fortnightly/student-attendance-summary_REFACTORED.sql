-- Work out how to order by fortnight counts

WITH REPORT_VARS AS (
  SELECT
    TO_CHAR((CURRENT DATE), 'YYYY') AS "CURRENT_YEAR",
    (SELECT START_DATE FROM TERM WHERE TERM = 'Term 1' AND START_DATE LIKE (TO_CHAR((CURRENT DATE), 'YYYY')) || '-%%-%%' FETCH FIRST 1 ROW ONLY) AS "YEAR_START",
    (DATE(CURRENT DATE - 28 DAYS)) AS "REPORT_START",
    (DATE(CURRENT DATE - 21 DAYS)) AS "REPORT_END"

  FROM SYSIBM.SYSDUMMY1
),

STUDENT_ABSENCES_DATA AS (
  SELECT DISTINCT
    (SELECT
      (SUM(CASE WHEN GTRD.TERM_DATE <= (REPORT_VARS.REPORT_END) THEN 1 ELSE 0 END) / 10)
    FROM TABLE(EDUMATE.GET_TIMETABLE_RUNNING_DATES(
      (SELECT TIMETABLE_ID
      FROM TERM WHERE TERM = 'Term 1'
      AND
      START_DATE LIKE (TO_CHAR((CURRENT DATE), 'YYYY')) || '-%%-%%' FETCH FIRST 1 ROW ONLY))) GTRD
    INNER JOIN TERM ON TERM.TERM_ID = GTRD.TERM_ID
    WHERE GTRD.DAY_INDEX NOT IN (888, 999)
    ) AS "ABSENCES_DIFF",
    GSFR.STUDENT_ID AS "ABSENCES_STUDENT_ID",
    CONTACT.FIRSTNAME AS "ABSENCES_FIRSTNAME",
    CONTACT.SURNAME AS "ABSENCES_SURNAME",
    FORM_RUN.FORM_RUN AS "ABSENCES_FORM_RUN",
    CLASS.CLASS AS "ABSENCES_HOMEROOM",
    DA.DATE_ON AS "ABSENCES_DATE_ON",
    ATTENDANCE_STATUS_DAILY.DAILY_ATTENDANCE_STATUS_ID AS "ALL_ABSENCES"
  
  FROM TABLE(EDUMATE.GET_ENROLED_STUDENTS_FORM_RUN(CURRENT DATE)) GSFR
  
  INNER JOIN DAILY_ATTENDANCE DA ON DA.STUDENT_ID = GSFR.STUDENT_ID
  INNER JOIN FORM_RUN ON FORM_RUN.FORM_RUN_ID = GSFR.FORM_RUN_ID
  INNER JOIN STUDENT ON STUDENT.STUDENT_ID = GSFR.STUDENT_ID
  INNER JOIN CONTACT ON CONTACT.CONTACT_ID = STUDENT.CONTACT_ID
  
  INNER JOIN TABLE(EDUMATE.GET_CURRENTLY_ENROLED_STUDENTS(CURRENT DATE)) GCES ON GCES.STUDENT_ID = GSFR.STUDENT_ID
  INNER JOIN VIEW_STUDENT_CLASS_ENROLMENT VSCE ON VSCE.STUDENT_ID = GCES.STUDENT_ID
  INNER JOIN CLASS ON CLASS.CLASS_ID = VSCE.CLASS_ID AND CLASS.CLASS_TYPE_ID = 2 AND VSCE.ACADEMIC_YEAR = TO_CHAR((CURRENT DATE), 'YYYY') AND VSCE.END_DATE > (CURRENT DATE)
  CROSS JOIN REPORT_VARS
  
  -- Absences join
  LEFT JOIN DAILY_ATTENDANCE_STATUS ATTENDANCE_STATUS_DAILY ON ATTENDANCE_STATUS_DAILY.DAILY_ATTENDANCE_STATUS_ID = DA.DAILY_ATTENDANCE_STATUS_ID
    AND (DA.DATE_ON BETWEEN REPORT_VARS.REPORT_START AND REPORT_VARS.REPORT_END)
    AND ATTENDANCE_STATUS_DAILY.DAILY_ATTENDANCE_STATUS_ID IN (2,3,4,5,6,7)

  WHERE ATTENDANCE_STATUS_DAILY.DAILY_ATTENDANCE_STATUS_ID IS NOT NULL

  ORDER BY FORM_RUN, SURNAME
),

STUDENT_LATES_DATA AS (
  SELECT DISTINCT
    (SELECT
      (SUM(CASE WHEN GTRD.TERM_DATE <= (REPORT_VARS.REPORT_END) THEN 1 ELSE 0 END) / 10)
    FROM TABLE(EDUMATE.GET_TIMETABLE_RUNNING_DATES(
      (SELECT TIMETABLE_ID
      FROM TERM WHERE TERM = 'Term 1'
      AND
      START_DATE LIKE (TO_CHAR((CURRENT DATE), 'YYYY')) || '-%%-%%' FETCH FIRST 1 ROW ONLY))) GTRD
    INNER JOIN TERM ON TERM.TERM_ID = GTRD.TERM_ID
    WHERE GTRD.DAY_INDEX NOT IN (888, 999)
    ) AS "LATES_DIFF",
    GSFR.STUDENT_ID AS "LATES_STUDENT_ID",
    CONTACT.FIRSTNAME AS "LATES_FIRSTNAME",
    CONTACT.SURNAME AS "LATES_SURNAME",
    FORM_RUN.FORM_RUN AS "LATES_FORM_RUN",
    CLASS.CLASS AS "LATES_HOMEROOM",
    DA.DATE_ON AS "LATES_DATE_ON",
    ATTENDANCE_STATUS_AM.DAILY_ATTENDANCE_STATUS_ID AS "ALL_LATES"
  
  FROM TABLE(EDUMATE.GET_ENROLED_STUDENTS_FORM_RUN(CURRENT DATE)) GSFR
  
  INNER JOIN DAILY_ATTENDANCE DA ON DA.STUDENT_ID = GSFR.STUDENT_ID
  INNER JOIN FORM_RUN ON FORM_RUN.FORM_RUN_ID = GSFR.FORM_RUN_ID
  INNER JOIN STUDENT ON STUDENT.STUDENT_ID = GSFR.STUDENT_ID
  INNER JOIN CONTACT ON CONTACT.CONTACT_ID = STUDENT.CONTACT_ID
  
  INNER JOIN TABLE(EDUMATE.GET_CURRENTLY_ENROLED_STUDENTS(CURRENT DATE)) GCES ON GCES.STUDENT_ID = GSFR.STUDENT_ID
  INNER JOIN VIEW_STUDENT_CLASS_ENROLMENT VSCE ON VSCE.STUDENT_ID = GCES.STUDENT_ID
  INNER JOIN CLASS ON CLASS.CLASS_ID = VSCE.CLASS_ID AND CLASS.CLASS_TYPE_ID = 2 AND VSCE.ACADEMIC_YEAR = TO_CHAR((CURRENT DATE), 'YYYY') AND VSCE.END_DATE > (CURRENT DATE)
  CROSS JOIN REPORT_VARS
  
  -- Lates join
  LEFT JOIN DAILY_ATTENDANCE_STATUS ATTENDANCE_STATUS_AM ON ATTENDANCE_STATUS_AM.DAILY_ATTENDANCE_STATUS_ID = DA.AM_ATTENDANCE_STATUS_ID
    AND (DA.DATE_ON BETWEEN REPORT_VARS.REPORT_START AND REPORT_VARS.REPORT_END)
    AND ATTENDANCE_STATUS_AM.DAILY_ATTENDANCE_STATUS_ID IN (14,15,16,17,18,19)

  WHERE ATTENDANCE_STATUS_AM.DAILY_ATTENDANCE_STATUS_ID IS NOT NULL

  ORDER BY FORM_RUN, SURNAME
),

ABSENCES_COUNTS AS (
  SELECT
    ROW_NUMBER() OVER () AS "ABSENCES_ROWNUMBER",
    SAD.ABSENCES_STUDENT_ID,
    SUM(CASE WHEN SAD.ALL_ABSENCES IS NOT NULL THEN 1 ELSE 0 END) AS "FORTNIGHT_ABSENCES",
    SUM(CASE WHEN SAD.ALL_ABSENCES IN (3,5,6) THEN 1 ELSE 0 END) AS "EXPLAINED_ABSENCES",
    SUM(CASE WHEN SAD.ALL_ABSENCES IN (2,4,7) THEN 1 ELSE 0 END) AS "UNEXPLAINED_ABSENCES"

  FROM STUDENT_ABSENCES_DATA SAD

  GROUP BY SAD.ABSENCES_STUDENT_ID, SAD.ABSENCES_FORM_RUN
),

LATES_COUNTS AS (
  SELECT
    ROWNUMBER() OVER () AS "LATES_ROWNUMBER",
    SLD.LATES_STUDENT_ID,
    SUM(CASE WHEN SLD.ALL_LATES IS NOT NULL THEN 1 ELSE 0 END) AS "FORTNIGHT_LATES",
    SUM(CASE WHEN SLD.ALL_LATES IN (16,17,18,19) THEN 1 ELSE 0 END) AS "EXPLAINED_LATES",
    SUM(CASE WHEN SLD.ALL_LATES IN (14,15) THEN 1 ELSE 0 END) AS "UNEXPLAINED_LATES"
  
  FROM STUDENT_LATES_DATA SLD
  
  GROUP BY SLD.LATES_STUDENT_ID, SLD.LATES_FORM_RUN
)


SELECT
  ABSENCES_ROWNUMBER,
  ABSENCES_STUDENT_ID,
  FORTNIGHT_ABSENCES,
  EXPLAINED_ABSENCES,
  UNEXPLAINED_ABSENCES,
  '#' AS "#",
  LC.LATES_STUDENT_ID,
  LC.FORTNIGHT_LATES,
  LC.EXPLAINED_LATES,
  LC.UNEXPLAINED_LATES

FROM ABSENCES_COUNTS AC

LEFT JOIN LATES_COUNTS LC ON LC.LATES_STUDENT_ID = AC.ABSENCES_STUDENT_ID