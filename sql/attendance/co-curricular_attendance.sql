WITH REPORT_VARS AS (
  --SELECT '[[date=date]]' as "THURSDAY" FROM SYSIBM.SYSDUMMY1
  SELECT (current date - 1 day) as "THURSDAY" FROM SYSIBM.SYSDUMMY1
),

CC_RAW AS (
  SELECT
    TO_CHAR((VA.DATE_ON), 'DD Month, YYYY') AS "DATE_ON",
    TO_CHAR((CURRENT DATE), 'DD Month, YYYY') AS "DATE_PRINTED",
    CHAR(TIME(CURRENT TIMESTAMP),USA) AS "TIME_PRINTED",
    STUDENT.STUDENT_NUMBER AS "LOOKUP_CODE",
    CONTACT.CONTACT_ID,
    CONTACT.SURNAME,
    CONTACT.FIRSTNAME,
    FORM_RUN.FORM_RUN,
    VA.ATTEND_STATUS_ID,
    (CASE WHEN ABSENCE_REASON IS NOT NULL THEN ATTEND_STATUS.ATTEND_STATUS || ' (' || ABSENCE_REASON.ABSENCE_REASON || ')' ELSE ATTEND_STATUS.ATTEND_STATUS END) AS "ATTENDANCE",
    VA.CLASS_ID,
    VA.LESSON_ID,
    CLASS.CLASS,
    COACH.FIRSTNAME AS "COACH_FIRSTNAME",
    COACH.SURNAME AS "COACH_SURNAME"
  
  FROM VIEW_ATTENDANCE VA
  
  INNER JOIN STUDENT ON STUDENT.STUDENT_ID = VA.STUDENT_ID
  INNER JOIN CONTACT ON CONTACT.CONTACT_ID = STUDENT.CONTACT_ID
  INNER JOIN TABLE(EDUMATE.GET_ENROLED_STUDENTS_FORM_RUN(CURRENT DATE)) CURRENTS ON CURRENTS.STUDENT_ID = VA.STUDENT_ID
  INNER JOIN FORM_RUN ON FORM_RUN.FORM_RUN_ID = CURRENTS.FORM_RUN_ID
  
  INNER JOIN ATTEND_STATUS ON ATTEND_STATUS.ATTEND_STATUS_ID = VA.ATTEND_STATUS_ID
  LEFT JOIN ABSENCE_REASON ON ABSENCE_REASON.ABSENCE_REASON_ID = VA.ABSENT_STATUS
  INNER JOIN CLASS ON CLASS.CLASS_ID = VA.CLASS_ID
  
  INNER JOIN CLASS_TEACHER ON CLASS_TEACHER.CLASS_ID = VA.CLASS_ID
  INNER JOIN TEACHER ON TEACHER.TEACHER_ID = CLASS_TEACHER.TEACHER_ID
  INNER JOIN CONTACT COACH ON COACH.CONTACT_ID = TEACHER.CONTACT_ID
  
  CROSS JOIN REPORT_VARS
  
  WHERE
    VA.DATE_ON = REPORT_VARS.THURSDAY
    AND
    VA.PERIOD_ID IN (SELECT PERIOD_ID FROM PERIOD WHERE PERIOD LIKE 'CoCurricular')
),

CLASS_COUNTS AS (
  SELECT
    COUNT(CC_RAW.CONTACT_ID) AS "TOTAL_STUDENTS",
    COUNT(CASE WHEN CC_RAW.ATTEND_STATUS_ID = 2 THEN 1 ELSE NULL END) AS "TOTAL_PRESENT",
    COUNT(CASE WHEN CC_RAW.ATTEND_STATUS_ID = 3 THEN 1 ELSE NULL END) AS "TOTAL_ABSENT",
    CC_RAW.CLASS_ID

  FROM CC_RAW
  
  GROUP BY CC_RAW.CLASS_ID, CC_RAW.CONTACT_ID
),

CLASS_TOTALS AS (
  SELECT
    SUM(TOTAL_STUDENTS) AS "TOTAL_STUDENTS",
    SUM(TOTAL_PRESENT) AS "TOTAL_PRESENT",
    SUM(TOTAL_ABSENT) AS "TOTAL_ABSENT",
    CLASS_ID
  
  FROM CLASS_COUNTS
  
  GROUP BY CLASS_ID
),

MARKED_ROLL_LOG AS (
  SELECT DISTINCT
    ATTENDANCE.LESSON_ID,
    ATTENDANCE.RECORDED_BY,
    ATTENDANCE.LAST_UPDATED,
    DATE_ON
  
  FROM ATTENDANCE
  
  INNER JOIN LESSON ON LESSON.LESSON_ID = ATTENDANCE.LESSON_ID
  INNER JOIN PERIOD_CLASS ON PERIOD_CLASS.PERIOD_CLASS_ID = LESSON.PERIOD_CLASS_ID
  INNER JOIN PERIOD ON PERIOD.PERIOD_ID = PERIOD_CLASS.PERIOD_CYCLE_DAY_ID
  CROSS JOIN REPORT_VARS
  
  WHERE
    PERIOD.PERIOD = 'CoCurricular'
    AND
    DATE_ON = REPORT_VARS.THURSDAY
),

MARKED_ROLLS AS (
  SELECT DISTINCT
    MARKED_ROLL_LOG.LESSON_ID,
    CLASS.CLASS_ID,
    CONTACT.FIRSTNAME AS "MARKER_FIRSTNAME",
    CONTACT.SURNAME AS "MARKER_SURNAME",
    (SELECT ATTENDANCE.LAST_UPDATED
      FROM ATTENDANCE
      WHERE ATTENDANCE.LESSON_ID = MARKED_ROLL_LOG.LESSON_ID
      ORDER BY ATTENDANCE.LAST_UPDATED DESC
      FETCH FIRST 1 ROW ONLY) AS "LAST_MARKED"
  
  FROM MARKED_ROLL_LOG
  
  INNER JOIN CONTACT ON CONTACT.CONTACT_ID = MARKED_ROLL_LOG.RECORDED_BY
  INNER JOIN LESSON ON LESSON.LESSON_ID = MARKED_ROLL_LOG.LESSON_ID
  INNER JOIN PERIOD_CLASS ON PERIOD_CLASS.PERIOD_CLASS_ID = LESSON.PERIOD_CLASS_ID
  INNER JOIN CLASS ON CLASS.CLASS_ID = PERIOD_CLASS.CLASS_ID

  GROUP BY MARKED_ROLL_LOG.LESSON_ID, CLASS.CLASS_ID, CONTACT.FIRSTNAME, CONTACT.SURNAME, MARKED_ROLL_LOG.LAST_UPDATED
)

SELECT DISTINCT
  CC_RAW.DATE_ON,
  CC_RAW.DATE_PRINTED,
  CC_RAW.TIME_PRINTED,
  CC_RAW.LOOKUP_CODE,
  CC_RAW.SURNAME,
  CC_RAW.FIRSTNAME,
  CC_RAW.FORM_RUN, 
  CC_RAW.ATTENDANCE,
  CC_RAW.CLASS_ID,
  CC_RAW.CLASS || '<br>' || CLASS_TOTALS.TOTAL_ABSENT || (CASE WHEN CLASS_TOTALS.TOTAL_ABSENT = 1 THEN ' student absent - ' ELSE ' students absent - ' END) || CLASS_TOTALS.TOTAL_PRESENT || ' students present - ' || 
CLASS_TOTALS.TOTAL_students || ' total students' AS "CLASS",
  CC_RAW.COACH_FIRSTNAME,
  CC_RAW.COACH_SURNAME,
  MARKED_ROLLS.MARKER_FIRSTNAME,
  MARKED_ROLLS.MARKER_SURNAME,
  TO_CHAR((MARKED_ROLLS.LAST_MARKED), 'DD Month, YYYY') AS "DATE_MARKED",
  CHAR(TIME(MARKED_ROLLS.LAST_MARKED), USA) AS "TIME_MARKED"

FROM CC_RAW

INNER JOIN CLASS_TOTALS ON CLASS_TOTALS.CLASS_ID = CC_RAW.CLASS_ID
INNER JOIN MARKED_ROLLS ON MARKED_ROLLS.LESSON_ID = CC_RAW.LESSON_ID

ORDER BY CLASS, CC_RAW.SURNAME